import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.server.ServerConnector;
import org.eclipse.jetty.servlet.ServletHandler;
import org.eclipse.jetty.servlet.ServletHolder;

public class MyTestMain3 {

	public static void main(String[] args) throws InterruptedException  {

		MyTestMain3 myTestMain3 = new MyTestMain3();
		
		try {
			// Routing Info 파일을 읽기
			String fileContents= MyUtils3.readAllOfFile(args[0]); 
			
			// Routing Info 파일에서 Port번호를 읽어온다.
			int port = MyUtils3.convertToObjectFromString(fileContents, MyObject3.class).getPort();
			
			// 서버시작(Parameter : Port 번호)
			myTestMain3.start(port, fileContents);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * 서버시작
	 * @param port : 포트번호
	 * @param routingRuleInfo : 파일로 부터 읽은 설정 파일정보
	 * @throws Exception
	 */
	public void start(int port, String routingRuleInfo) throws Exception {	

		//서버 인스턴스 생성	
		Server server = new Server();
		ServerConnector http = new ServerConnector(server);
		http.setHost("127.0.0.1");
		http.setPort(port);
		server.addConnector(http);

		ServletHandler servletHandler = new ServletHandler();

		// 서블릿 등록 방법 : ServletHolder 를 통해 Servlet Class를 등록 : 서블릿생성시 초기 파리미터를 넘겨줄때 사용.
		ServletHolder myServletHolder = new ServletHolder(MyServlet3.class); //서블릿클래스를 Holder 에 등록
		myServletHolder.setInitParameter("routingRuleInfo", routingRuleInfo); //파일로 읽은 문자열을 초기 파라메터로 증록
		servletHandler.addServletWithMapping(myServletHolder, "/"); //ServletHolder를 핸들러에 등록.
		
		server.setHandler(servletHandler);
		server.start();
		server.join();

	}
